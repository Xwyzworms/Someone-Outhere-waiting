library(statsr)
library(dplyr)
library(ggplot2)
data(mlb11)
names(mbl11)
names(mlb11)
str(mlb11)
graphics::plot(mlb11$runs , mlb11$hits)
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(y= runs , fill = at_bats) ) +
ggplot2::geom_bar()
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs , fill = at_bats) ) +
ggplot2::geom_bar()
str(mlb11)
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs ,y = at_bats) ) +
ggplot2::geom_boxplot()
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs ,y = at_bats) ) +
ggplot2::geom_dotplot()
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs ,y = at_bats) ) +
ggplot2::geom_point()
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs ,y = at_bats) ) +
ggplot2::geom_point(stat = "linear")
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs ,y = at_bats) ) +
ggplot2::geom_point(stat = "linear") +
ggplot2::geom_smooth(method = "ln")
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs ,y = at_bats) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "ln")
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs ,y = at_bats) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "ln" , formula = y~x)
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x= runs ,y = at_bats) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm" , formula = y~x)
mlb11 %>%
summarise(stats::cor(runs, at_bats))
plot_ss(x = at_bats, y = runs, data = mlb11)
statsr::plot_ss(x = at_bats, y = runs, data = mlb11)
# type your code for Question 2 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(y= runs ,x = at_bats) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm" , formula = y~x)
plot_ss(x = at_bats, y = runs, data = mlb11, showSquares = TRUE)
```{r plotss-atbats-runs-squares, eval=FALSE}
plot_ss(x = at_bats, y = runs, data = mlb11, showSquares = TRUE)
plot_ss(x = at_bats, y = runs, data = mlb11, showSquares = TRUE)
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
View(m1)
View(m1)
# type your code for Question 4 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x = homeruns , y = runs))+
ggplot2::geom_point()+
ggplot2::stat_smooth(method = "lm" , formula = y~x)
# type your code for Question 4 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x = homeruns , y = runs))+
ggplot2::geom_point()+
ggplot2::stat_smooth(method = "lm" , formula = y~x)+
ggplot2::labs(x = stats::cor(x,y))
# type your code for Question 4 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x = homeruns , y = runs))+
ggplot2::geom_point()+
ggplot2::stat_smooth(method = "lm" , formula = y~x)+
ggplot2::labs(x = stats::cor(homeruns, runs))
# type your code for Question 4 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x = homeruns , y = runs))+
ggplot2::geom_point()+
ggplot2::stat_smooth(method = "lm" , formula = y~x)+
ggplot2::labs(x = stats::cor(mlb11$homeruns, mlb11$runs))
# type your code for Question 4 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x = homeruns , y = runs))+
ggplot2::geom_point()+
ggplot2::stat_smooth(method = "lm" , formula = y~x)+
ggplot2::labs(title = stats::cor(mlb11$homeruns, mlb11$runs))
# type your code for Question 4 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x = homeruns , y = runs))+
ggplot2::geom_point()+
ggplot2::stat_smooth(method = "lm" , formula = y~x)+
ggplot2::labs(title = stats::cor(mlb11$homeruns, mlb11$runs) ^2 )
# type your code for Question 4 here, and Knit
ggplot2::ggplot(data = mlb11 , aes(x = homeruns , y = runs))+
ggplot2::geom_point()+
ggplot2::stat_smooth(method = "lm" , formula = y~x)+
ggplot2::labs(title = paste("R-Squared : " ,  stats::cor(mlb11$homeruns, mlb11$runs) ^2) )
model = lm(data = mlb11 , y = runs , x = homeruns)
model = lm(data = mlb11 ,formula = runs ~ homeruns)
summary(model)
summary(model)
ggplot(data = mlb11, aes(x = at_bats, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
?stat_smooth
ggplot(data = mlb11, aes(x = at_bats, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = T)
ggplot(data = mlb11, aes(y = at_bats, x = runs)) +
geom_point() +
stat_smooth(method = "lm", se = T)
x
ggplot(data = mlb11, aes(x = at_bats, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = T)
ggplot(data = mlb11, aes(y = at_bats, x = runs)) +
geom_point() +
stat_smooth(method = "lm", se = T)
y
ggplot(data = mlb11, aes(x = at_bats, y = runs)) +
geom_point() +
stat_smooth(method = "lm", se = T)
# type your code for Question 5 here, and Knit
model <- lm(data = mlb11, formula = runs ~ at_bats)
anova(model)
summary(model)
anova(model)
summary(model)
model$coefficients[1] + (model$coefficients[2] * 5579)
mlb11 %>%
filter(at_bats == 5579) %>%
select(runs)
mlb11 %>%
filter(at_bats == 5579)
mlb11 %>%
filter(at_bats == 5579) %>%
select (runs) -> correct_runs
predicted_runs <- model$coefficients[1] + (model$coefficients[2] * 5579)
error <- correct_runs - predicted_runs
print("The residual / error is estimated : " , error)
paste("The residual / error is estimated : " , error)
m1$fitted.values
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m1, aes(x = fitted, y = resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
names(m1$fitted.values)
ggplot(data = m1, aes(x = fitted.values, y = df.residual)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
m1$df.residual
m1$dresidual
m1$.residual
ggplot(data = m1, aes(x = .fitted., y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
```{r residuals}
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 25) +
xlab("Residuals")
ggplot(data = m1, aes(sample = .resid)) +
stat__qq
ggplot(data = m1, aes(sample = .resid)) +
(stat__qq)
ggplot(data = m1, aes(sample = .resid)) +
stat__qq()
ggplot(data = m1, aes(sample = .resid)) +
stat_qq()
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 25,aes(y = ..density..)) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 25,aes(y = ..density..)) +
geom_density()
ggplot(data = m1, aes(sample = .resid)) +
stat_qq() +
qqline()
ggplot(data = m1, aes(sample = .resid)) +
stat_qq() +
qqline(m1$residuals)
ggplot(data = m1, aes(sample = .resid)) +
stat_qq(mapping = .resed) +
ggplot(data = m1, aes(sample = .resid)) +
stat_qq(mapping = .resid) +
ggplot(data = m1, aes(sample = .resid)) +
stat_qq(mapping = .resid)
ggplot(data = m1, aes(sample = .resid)) +
stat_qq(mapping = .resid)
?stat_qq
qqnorm(m1$residuals)
qqline(m1$residuals)
qqline(m1$residuals)
qqline(m1$residuals)
ggplot(data = m1, aes(sample = .resid)) +
stat_qq(mapping = .resid)
ggplot(data = m1, aes(sample = .resid)) +
stat_qq()
# type your code for the Exercise here, and Knit
corrplot::corrplot(mlb11)
# type your code for the Exercise here, and Knit
corrplot::corrplot.mixed(cor(, 2 : 12))
# type your code for the Exercise here, and Knit
corrplot::corrplot.mixed(cor(,  2:12))
# type your code for the Exercise here, and Knit
corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
names(mlb11)
# type your code for the Exercise here, and Knit
corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
names(mlb11)
ggplot2::ggplot(data = mlb11 ,aes(x = new_obs , y = runs) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm")
ggplot2::ggplot(data = mlb11 ,aes(x = new_obs , y = runs) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm") +
ggplot2::labs(title = paste("R Squared : " , cor(new_obs , runs)))
ggplot2::ggplot(data = mlb11 ,aes(x = new_obs , y = runs) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm") +
ggplot2::labs(title = paste("R Squared : " , cor(mlb11$new_obs , mlb11$runs)))
ggplot2::ggplot(data = mlb11 ,aes(x = new_obs , y = runs) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm") +
ggplot2::labs(title = paste("R Squared : " , cor(mlb11$new_obs , mlb11$runs) ^ 2))
ggplot2::ggplot(data = mlb11 , aes(x = at_bats , y = runs)) +
ggplot2::geom_point()+
ggplot2::geom_smooth(method = "lm") +
ggplot2::labs(title = paste("R Squared : "  , cor(mlb11$runs . mlb11$at_bats) ^2 ))
ggplot2::ggplot(data = mlb11 , aes(x = at_bats , y = runs)) +
ggplot2::geom_point()+
ggplot2::geom_smooth(method = "lm") +
ggplot2::labs(title = paste("R Squared : "  , cor(mlb11$runs , mlb11$at_bats) ^2 ))
# type your code for the Exercise here, and Knit
ggplot2::ggplot(data = mlb11 ,aes(x = new_obs , y = runs) ) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm") +
ggplot2::labs(title = paste("R Squared : " , cor(mlb11$new_obs , mlb11$runs) ^ 2))
ggplot2::ggplot(data = mlb11 , aes(x = at_bats , y = runs)) +
ggplot2::geom_point()+
ggplot2::geom_smooth(method = "lm") +
ggplot2::labs(title = paste("R Squared : "  , cor(mlb11$runs , mlb11$at_bats) ^2 ))
# type your code for Question 9 here, and Knit
corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
print("Shit")
}
paste("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
paste("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
paste("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
print("shit")
for (variable in variableOfInterest)
{
print("shit")
paste("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
for (variable in variableOfInterest)
for (variable in variableOfInterest)
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
{
print(variable)
paste("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
names(mlb11)
print("1")
for (variable in variableOfInterest)
{
print("1")
paste("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
cat("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
{
print("1")
cat("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
{
{
{
print("1")
cat("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
names(mlb11)
for (variable in variableOfInterest)
{
print("1")
cat("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
names(mlb11)
for (variable in variableOfInterest)
{
print("1")
cat("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
names(mlb11)
for (variable in variableOfInterest)
{
print("1")
paste("Correlation For  : ",variable , "is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
print(variable)
paste("Correlation For  : ",variable , " is :" , cor(mlb11[,"runs"] , mlb11[, variable]))
}
paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[, variable]))
paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[, variable]))
mlb11[, "at_bats"]
mlb11[, "hits"]
paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11$variable]))
paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11$variable))
for (variable in variableOfInterest)
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
print(variable)
paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11$variable))
}
paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11$at_bats))
for (variable in variableOfInterest)
{
print(variable)
paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11$at_bats))
}
print(paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11$at_bats)))
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
print(variable)
print(paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11$at_bats)))
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
print(paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
}
ggplot2::ggplot(data = mlb11 , x = variable , y = runs) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
ggplot2::ggplot( x = mlb11[,variable] , y = mlb11runs$runs) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
ggplot2::ggplot( x = mlb11[,variable] , y = mlb11runs$runs) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
ggplot2::ggplot( x = mlb11[, variable] , y = mlb11runs$runs) +
ggplot2::geom_point() +
ggplot2::labs(title = print(paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable]))))
}
ggplot2::ggplot( x = mlb11[, variable] , y = mlb11runs$runs) +
ggplot2::geom_point() +
}
ggplot2::ggplot( x = mlb11[, variable] , y = mlb11runs$runs) +
ggplot2::geom_point()
ggplot2::ggplot(data = mlb11 , x = variable , y = runs) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
ggplot2::ggplot(aes(x = mlb11[,variable] , y = mlb11$runs)) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
ggplot2::ggplot(data = mlb11 ,aes(x = mlb11[,variable] , y = mlb11$runs)) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
ggplot2::ggplot(data = mlb11 ,aes(x = [,variable] , y = mlb11$runs)) +
ggplot2::ggplot(data = mlb11 ,aes(x = variable , y = runs)) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
{
ggplot2::ggplot(data = mlb11 ,aes(x = variable , y = runs)) +
ggplot2::geom_point() +
}
ggplot2::ggplot(data = mlb11 ,aes(x = variable , y = runs)) +
ggplot2::geom_point()
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
ggplot2::ggplot(data = mlb11 ,aes(x = variable , y = runs)) +
ggplot2::geom_point()
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
ggplot2::ggplot(data = mlb11 ,aes(x = variable , y = runs)) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
ggplot2::ggplot(data = mlb11 ,aes(x = variable , y = runs)) +
ggplot2::geom_point() +
ggplot2::labs(title = paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
}
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
ggplot2::ggplot(data = mlb11 ,aes(x = variable , y = runs)) +
ggplot2::geom_point() +
ggplot2::labs(title = print(paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable]))))
}
print(paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable]))))
# type your code for Question 9 here, and Knit
#corrplot::corrplot.mixed(cor(mlb11[,  2:12]))
variableOfInterest <- c("at_bats" , "hits" , "wins" , "bat_avg")
for (variable in variableOfInterest)
{
print(paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable]))))
# type your code for Question 10 here, and Knit
variableOfInterest <- c("new_obs" , "new_slug" , "new_onbase" , )
# type your code for Question 10 here, and Knit
variableOfInterest <- c("new_obs" , "new_slug" , "new_onbase" )
for (variable in variableOfInterest)
{
print(paste("Correlation For  : ",variable , " is :" , cor(mlb11$runs , mlb11[,variable])))
}
# type your code for the Exercise here, and Knit
#3 Cjeking model diagnistics and assumptions
# Checking assumption
# Linearity
ggplot2::ggplot(data = mlb11, aes(x = new_obs , y = runs ))+
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm") +
ggplot2::labs(title = paste("R Squared : " , cor(mlb11$new_obs , mlb11$runs)))
model <- lm(data = mlb11 , formula = runs~new_obs)
summary(model)
ggplot2::ggplot(data = model , aes(x = .fitted , y =.resid ))
ggplot2::ggplot(data = model , aes(x = .fitted , y =.resid )) +
ggplot::geom_point()
ggplot2::ggplot(data = model , aes(x = .fitted , y =.resid )) +
ggplot2::geom_point()
ggplot2::ggplot(data = model , aes(x = .fitted , y =.resid )) +
ggplot2::geom_point() +
ggplot2::geom_hline(yintercept = 0 , linetype = 'dashed')
ggplot2::ggplot2(data = mlb11 , aes(x = .fitted , y = .resid)) +
ggplot2::geom_qq()
ggplot2::ggplot(data = mlb11 , aes(x = .fitted , y = .resid)) +
ggplot2::geom_qq()
ggplot2::ggplot(data = model , aes(x = .fitted , y = .resid)) +
ggplot2::geom_qq()
ggplot2::ggplot(data = model , aes(sample =  .resid)) +
ggplot2::geom_qq()
